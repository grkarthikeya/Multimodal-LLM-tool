from flask import Flask, request, jsonify
import requests
from flask_cors import CORS
import google.generativeai as genai
import os

app = Flask(__name__)
CORS(app)  # This enables CORS for all routes

# Replace with your OCR.Space API key
OCR_API_KEY = 'K88096401988957'
OCR_API_URL = 'https://api.ocr.space/parse/image'

# Replace with your Gemini API key directly (not recommended for production)
GEMINI_API_KEY = 'AIzaSyDJTkI7QJYIVGcuUgYq03LjRQGa6J7oqyE'

# Configure Gemini API key
genai.configure(api_key=GEMINI_API_KEY)

# Function to extract text from image using OCR.Space
def extract_text_from_image(image_file):
    payload = {
        'apikey': OCR_API_KEY,
        'isOverlayRequired': False,
        'language': 'eng'
    }
    files = {
        'file': (image_file.filename, image_file.read(), image_file.content_type)
    }
    response = requests.post(OCR_API_URL, data=payload, files=files)

    if response.status_code == 200:
        result = response.json()
        if not result['IsErroredOnProcessing']:
            return result['ParsedResults'][0]['ParsedText']
        else:
            return {"error": result['ErrorMessage']}
    else:
        return {"error": response.text}

# Function to summarize using Gemini API
def summarize_text_with_gemini(extracted_text, context):
    full_text = context + " " + extracted_text if context else extracted_text
    model = genai.GenerativeModel("gemini-1.5-flash")
    response = model.generate_content(full_text)
    return response.text

@app.route('/api/extract-text', methods=['POST'])
def extract_text():
    if 'image' not in request.files:
        return jsonify({'error': 'No image uploaded'}), 400

    image = request.files['image']
    extracted_text = extract_text_from_image(image)

    if isinstance(extracted_text, dict):
        return jsonify(extracted_text), 500

    # Optional context from the user
    context = request.form.get('context', '')

    # Use Gemini API to summarize the extracted text
    summarized_text = summarize_text_with_gemini(extracted_text, context)

    return jsonify({'extracted_text': extracted_text, 'summary': summarized_text})

if __name__ == '__main__':
    app.run(debug=True)

